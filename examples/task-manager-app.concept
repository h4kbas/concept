# Task Manager App - Real World Example
# This demonstrates a complete application using file, db, and http plugins

# Database Setup - Create tables for our task management system
db create tasks
    id is string
    title is string
    description is string
    status is string
    priority is string
    created_at is string
    updated_at is string

db create users
    id is string
    username is string
    email is string
    role is string
    created_at is string

# File System Setup - Create necessary directories and files
file create_dir ./task-manager-data
file create_dir ./task-manager-data/logs
file create_dir ./task-manager-data/exports

# Create initial configuration file
file write ./task-manager-data/config.concept
    app_name is Task Manager
    version is 1.0.0
    database_path is ./concept-database
    log_level is info
    max_tasks_per_user is 100

# Create a sample log file
file write ./task-manager-data/logs/app.log
    [2024-01-01 10:00:00] INFO: Task Manager started
    [2024-01-01 10:00:01] INFO: Database initialized
    [2024-01-01 10:00:02] INFO: HTTP server ready on port 3000

# HTTP API Setup - Register endpoints for our task management system
http register /api/tasks GET
    # Get all tasks
    db select tasks
    file append ./task-manager-data/logs/api.log
        [GET /api/tasks] Request received at {current_time}

http register /api/tasks POST
    # Create a new task
    db insert tasks
        id is {generate_id}
        title is {request_body.title}
        description is {request_body.description}
        status is pending
        priority is {request_body.priority}
        created_at is {current_time}
        updated_at is {current_time}
    file append ./task-manager-data/logs/api.log
        [POST /api/tasks] New task created: {request_body.title}

http register /api/tasks/:id PUT
    # Update a task
    db update tasks
        status is {request_body.status}
        updated_at is {current_time}
        where id is {params.id}
    file append ./task-manager-data/logs/api.log
        [PUT /api/tasks/{params.id}] Task updated

http register /api/tasks/:id DELETE
    # Delete a task
    db delete tasks
        where id is {params.id}
    file append ./task-manager-data/logs/api.log
        [DELETE /api/tasks/{params.id}] Task deleted

http register /api/users GET
    # Get all users
    db select users
    file append ./task-manager-data/logs/api.log
        [GET /api/users] Request received at {current_time}

http register /api/users POST
    # Create a new user
    db insert users
        id is {generate_id}
        username is {request_body.username}
        email is {request_body.email}
        role is user
        created_at is {current_time}
    file append ./task-manager-data/logs/api.log
        [POST /api/users] New user created: {request_body.username}

# Seed some initial data
db insert users
    id is user-001
    username is admin
    email is admin@taskmanager.com
    role is admin
    created_at is 2024-01-01T10:00:00Z

db insert users
    id is user-002
    username is john_doe
    email is john@example.com
    role is user
    created_at is 2024-01-01T10:01:00Z

db insert tasks
    id is task-001
    title is Setup project
    description is Initialize the task management system
    status is completed
    priority is high
    created_at is 2024-01-01T10:00:00Z
    updated_at is 2024-01-01T10:30:00Z

db insert tasks
    id is task-002
    title is Add user authentication
    description is Implement login and registration system
    status is in_progress
    priority is medium
    created_at is 2024-01-01T10:05:00Z
    updated_at is 2024-01-01T10:05:00Z

db insert tasks
    id is task-003
    title is Write documentation
    description is Create API documentation and user guide
    status is pending
    priority is low
    created_at is 2024-01-01T10:10:00Z
    updated_at is 2024-01-01T10:10:00Z

# Generate a summary report
file write ./task-manager-data/exports/summary.txt
    Task Manager Application Summary
    ================================
    
    Database Tables Created:
    - tasks (6 columns)
    - users (5 columns)
    
    API Endpoints Registered:
    - GET /api/tasks
    - POST /api/tasks
    - PUT /api/tasks/:id
    - DELETE /api/tasks/:id
    - GET /api/users
    - POST /api/users
    
    Initial Data:
    - 2 users created
    - 3 tasks created
    
    Files Created:
    - Configuration: ./task-manager-data/config.concept
    - Logs: ./task-manager-data/logs/app.log
    - API Logs: ./task-manager-data/logs/api.log
    - Summary: ./task-manager-data/exports/summary.txt

# Display current state
db describe tasks
db describe users
file list ./task-manager-data
file read ./task-manager-data/exports/summary.txt
